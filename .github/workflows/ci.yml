name: CI Pipeline

on:
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run linter
        run: ruff check .

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Create .env file
        run: |
          cat <<EOF > .env
          DJANGO_SECRET_KEY=testing-secret-key
          DJANGO_DEBUG=True
          DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1

          DB_ENGINE=django.db.backends.sqlite3
          DB_NAME=db.sqlite3

          LANGUAGE_CODE=es-ar
          TIME_ZONE=UTC

          LOGIN_REDIRECT_URL=/events/
          LOGIN_URL=/accounts/login/
          LOGOUT_REDIRECT_URL=/accounts/login/
          EOF

      - name: Build Docker image
        run: docker build -t myapp .

      - name: Run Django checks in container
        run: docker run --env-file .env myapp python manage.py check

  unit_integration_tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Create .env file
        run: |
          cat <<EOF > .env
          DJANGO_SECRET_KEY=testing-secret-key
          DJANGO_DEBUG=True
          DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1

          DB_ENGINE=django.db.backends.sqlite3
          DB_NAME=db.sqlite3

          LANGUAGE_CODE=es-ar
          TIME_ZONE=UTC

          LOGIN_REDIRECT_URL=/events/
          LOGIN_URL=/accounts/login/
          LOGOUT_REDIRECT_URL=/accounts/login/
          EOF

      - name: Run unit and integration tests
        run: python manage.py test app/test/test_unit app/test/test_integration

  e2e_tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Create .env file
        run: |
          cat <<EOF > .env
          DJANGO_SECRET_KEY=testing-secret-key
          DJANGO_DEBUG=True
          DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1

          DB_ENGINE=django.db.backends.sqlite3
          DB_NAME=db.sqlite3

          LANGUAGE_CODE=es-ar
          TIME_ZONE=UTC

          LOGIN_REDIRECT_URL=/events/
          LOGIN_URL=/accounts/login/
          LOGOUT_REDIRECT_URL=/accounts/login/
          EOF

      - name: Install Playwright and browsers
        run: |
          python -m playwright install --with-deps chromium
          python -m playwright install --with-deps firefox

      - name: Run E2E tests
        run: python manage.py test app/test/test_e2e
